---
- name: Creating_Etc_Nginx_Auth_Directory
  become: true
  check_mode: false
  ansible.builtin.file:
    path: /etc/nginx/auth
    state: directory
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Creating_Etc_Nginx_Data_Directory
  become: true
  check_mode: false
  ansible.builtin.file:
    path: /etc/nginx/data
    state: directory
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Generating_htpasswd_UserList_File
  become: true
  check_mode: false
  community.general.htpasswd:
    state: present
    path: /etc/nginx/auth/nginx.htpasswd
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"
    name: "{{ registry_credentials.htpasswd_username }}"
    password: "{{ registry_credentials.htpasswd_password }}"

- name: Creating_Wordpress_Mysql_Compose_Directory
  become: true
  check_mode: false
  ansible.builtin.file:
    path: /home/ubuntu/project
    state: directory
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Tranferring_Wordpress_Mysql_Compose_File
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 03-docker-compose.yml.j2
    dest: /home/ubuntu/project/docker-compose.yml
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Creating_Registry_Nginx_Compose_Directory
  become: true
  check_mode: false
  ansible.builtin.file:
    path: /home/ubuntu/registry
    state: directory
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Tranferring_Registry_Nginx_Compose_File
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 03-newregistry-compose.yml.j2
    dest: /home/ubuntu/registry/docker-compose.yml
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Validating_Wordpress_Mysql_Compose_File
  become: true
  check_mode: false
  ansible.builtin.command:
    cmd: "/bin/bash -c 'cd /home/ubuntu/project && docker compose config'"
  changed_when: false
  failed_when: false

- name: Validating_Registry_Nginx_Compose_File
  become: true
  check_mode: false
  ansible.builtin.command:
    cmd: "/bin/bash -c 'cd /home/ubuntu/registry && docker compose config'"
  changed_when: false
  failed_when: false

- name: Executing_Registry_Nginx_Compose_File
  check_mode: false
  become: true
  community.docker.docker_compose_v2:
    project_src: /home/ubuntu/registry
    state: present
    recreate: always
    dependencies: true
  environment: "{{ proxy_env }}"

- name: Pause_Execution_Of_AllTasks_Before_DockerLogin
  become: true
  check_mode: false
  ansible.builtin.pause:
    seconds: 30
    prompt: "Please Wait ..."
  failed_when: false

- name: Logining_Into_Private_Cache_Registry
  become: true
  check_mode: false
  community.docker.docker_login:
    registry_url: https://reg.mahmoudisari.ir
    state: present
    timeout: 60
    username: "{{ registry_credentials.htpasswd_username }}"
    password: "{{ registry_credentials.htpasswd_password }}"

- name: Executing_Wordpress_Mysql_Compose_File
  check_mode: false
  become: true
  community.docker.docker_compose_v2:
    project_src: /home/ubuntu/project
    state: present
    recreate: always
    dependencies: true
  environment: "{{ proxy_env }}"

- name: Tranferring_Wordpress_Nginx_Config_Files
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 02-wordpress_nginx.conf.j2
    dest: /etc/nginx/conf.d/wordpress_nginx.conf
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Restarting_Nginx_Container
  become: true
  check_mode: false
  community.docker.docker_container:
    name: nginx
    state: started
    restart: true

- name: Pause_Execution_Of_AllTasks_ForContainers
  become: true
  check_mode: false
  ansible.builtin.pause:
    seconds: 180
    prompt: "Please Wait ..."
  failed_when: false
