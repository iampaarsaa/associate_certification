---
- name: Transferring_Xray_Vless_Json_File
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 02-vless.json.j2
    dest: /home/ubuntu/Xray-linux-64/vless1.json
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.hard_nonexec }}"

- name: Transferring_Xray_Vpn_Script_File
  become: true
  check_mode: false
  ansible.builtin.copy:
    src: vpn
    dest: /home/ubuntu/Xray-linux-64/vpn
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Killing_All_Processes_OnPort_1081
  become: true
  check_mode: false
  ansible.builtin.command:
    cmd: "/bin/bash -c 'kill -9 $(lsof -i :1081)'"
  changed_when: false
  failed_when: false

- name: Executing_VPN_File_Before_ShutDown
  become: true
  check_mode: false
  ansible.builtin.command:
    cmd: "/bin/bash -c '/home/ubuntu/Xray-linux-64/vpn > /home/ubuntu/log.txt 2>&1 &'"
  changed_when: false
  failed_when: false
  async: 3600
  poll: 0

- name: Pause_Execution_Of_AllTasks_ForVPN
  become: true
  check_mode: false
  ansible.builtin.pause:
    seconds: 30
    prompt: "Please Wait ..."
  failed_when: false

- name: Making_Sure_Port_1081_IsWorking_Before_Shutdown
  become: true
  check_mode: false
  ansible.builtin.command:
    cmd: "/bin/bash -c 'netstat -tuln | grep :1081'"
  changed_when: false
  failed_when: false

- name: Stopping_And_Disabling_UFW_Service
  become: true
  check_mode: false
  ansible.builtin.service:
    name: ufw
    state: stopped
    enabled: false
  failed_when: false

- name: Stopping_And_Disabling_Postfix_Service
  become: true
  check_mode: false
  ansible.builtin.service:
    name: postfix
    state: stopped
    enabled: false
  failed_when: false

- name: Setting_System_Timezone_To_Asia/Tehran
  become: true
  check_mode: false
  community.general.timezone:
    name: Asia/Tehran

- name: Transferring_Timeout_Conf_File
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 02-timeout.j2
    dest: /etc/profile.d/timeout-settings.sh
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Transferring_SSH_Banner_File
  become: true
  check_mode: false
  ansible.builtin.copy:
    src: ssh_banner
    dest: /etc/issue
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"
  failed_when: false

- name: Transferring_Sshd_config_file
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 02-sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Transferring_Iptables_Config_File
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 02-iptables.j2
    dest: /etc/iptables/rules.v4
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Restoring_Iptables_State_From_File
  become: true
  check_mode: false
  community.general.iptables_state:
    path: /etc/iptables/rules.v4
    state: restored
    noflush: true
