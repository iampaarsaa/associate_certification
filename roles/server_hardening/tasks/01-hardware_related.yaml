---
- name: Updating_Package_Manager_Sources_List
  become: true
  check_mode: false
  ansible.builtin.apt:
    update_cache: true
    autoclean: true
    autoremove: true
    force_apt_get: "{{ aptget_operation_handler }}"
    update_cache_retries: "{{ apt_operations_retries_attempts }}"
    cache_valid_time: "{{ apt_operations_cached_valid_time }}"
    lock_timeout: "{{ apt_possible_lock_situation_wait_time }}"
    upgrade: safe

- name: Downloading_Xray_Linux_64bit_Zip_File
  become: true
  check_mode: false
  ansible.builtin.uri:
    force: true
    method: GET
    url: https://github.com/XTLS/Xray-core/releases/download/v1.8.9/Xray-linux-64.zip
    dest: /home/ubuntu
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.hard_nonexec }}"


- name: Creating_Xray_Linux64_Unpacked_Directory
  become: true
  check_mode: false
  ansible.builtin.file:
    state: directory
    path: /home/ubuntu/Xray-linux-64
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"
    recurse: "{{ recursive_file_permission }}"

- name: Installing_Hardening_Required_Packages
  become: true
  check_mode: false
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    autoclean: true
    autoremove: true
    force_apt_get: "{{ aptget_operation_handler }}"
    update_cache_retries: "{{ apt_operations_retries_attempts }}"
    lock_timeout: "{{ apt_possible_lock_situation_wait_time }}"
  loop: "{{ hardening_required_packages }}"

- name: Extracting_Xray_Linux_64Bit_Zip_File
  become: true
  check_mode: false
  ansible.builtin.unarchive:
    remote_src: true
    src: /home/ubuntu/Xray-linux-64.zip
    dest: /home/ubuntu/Xray-linux-64
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Setting_Hostname_Using_Ansible
  become: true
  check_mode: false
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Transferring_Etc_Hosts_File
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 01-hostnames.j2
    dest: /etc/hosts
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Unmounting_TMP_Directory
  become: true
  check_mode: false
  ansible.posix.mount:
    path: /tmp
    state: absent

- name: Removing_Floppy_From_Fstab
  become: true
  check_mode: false
  ansible.builtin.lineinfile:
    path: /etc/fstab
    state: absent
    regexp: '^(.*)floppy(.*)$'
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Transferring_Etc_Security_Limits_Conf_File
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 01-limits.conf.j2
    dest: /etc/security/limits.conf
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Transferring_Etc_Systemd_Coredump_Conf_File
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 01-coredump.conf.j2
    dest: /etc/systemd/coredump.conf
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Transferring_Etc_Systemd_Resolved_Conf_File
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 01-resolved.conf.j2
    dest: /etc/systemd/resolved.conf
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Transferring_Etc_Resolv_Conf_File
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 01-resolv.conf.j2
    dest: /etc/resolv.conf
    follow: true
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Transferring_Etc_Hosts_Allow_Conf
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 01-hosts.allow.j2
    dest: /etc/hosts.allow
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"

- name: Transferring_Etc_Hosts_Deny_Conf
  become: true
  check_mode: false
  ansible.builtin.template:
    src: 01-hosts.deny.j2
    dest: /etc/hosts.deny
    owner: "{{ user_groups.elevated_user }}"
    group: "{{ user_groups.elevated_user }}"
    mode: "{{ file_permissions.soft_nonexec }}"
